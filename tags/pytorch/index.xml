<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pytorch on Lei.Chat()</title>
    <link>https://www.lei.chat/tags/pytorch/</link>
    <description>Recent content in pytorch on Lei.Chat()</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2018 - 2025 &lt;a href=&#34;https://www.lei.chat/&#34;&gt;Lei Zhang&lt;/a&gt;
</copyright>
    <lastBuildDate>Wed, 25 Dec 2024 15:13:01 -0800</lastBuildDate><atom:link href="https://www.lei.chat/tags/pytorch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Triton Compiler Development Tips</title>
      <link>https://www.lei.chat/posts/triton-compiler-development-tips/</link>
      <pubDate>Wed, 25 Dec 2024 15:13:01 -0800</pubDate>
      
      <guid>https://www.lei.chat/posts/triton-compiler-development-tips/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://triton-lang.org/&#34;&gt;Triton&lt;/a&gt; provides an elegant solution to program GPU kernels in Python,
positioning itself as a critical component in the modern AI software stack.
To deliver performance and portability, it leverages a compiler, the capability
of which determines the potential.
Hacking the compiler internals is not a simple task.
Here are some tips hopefully useful to folks.
I&amp;rsquo;ll try to keep this blog post updated periodically.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
