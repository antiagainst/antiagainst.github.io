<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ir on Lei.Chat()</title>
    <link>https://www.lei.chat/tags/ir/</link>
    <description>Recent content in ir on Lei.Chat()</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2018 - 2022 &lt;a href=&#34;https://www.lei.chat/&#34;&gt;Lei Zhang&lt;/a&gt;
</copyright>
    <lastBuildDate>Wed, 31 Aug 2022 14:59:09 -0700</lastBuildDate><atom:link href="https://www.lei.chat/tags/ir/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MLIR Linalg Dialect and Patterns</title>
      <link>https://www.lei.chat/posts/mlir-linalg-dialect-and-patterns/</link>
      <pubDate>Wed, 31 Aug 2022 14:59:09 -0700</pubDate>
      
      <guid>https://www.lei.chat/posts/mlir-linalg-dialect-and-patterns/</guid>
      <description>&lt;p&gt;I explained the Vector dialect and related patterns in the &lt;a href=&#34;../mlir-vector-dialect-and-patterns/&#34;&gt;previous blog
post&lt;/a&gt;. In this one let us look at a layer higher and
talk about the Linalg dialect and transformations around it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compilers and IRs: LLVM IR, SPIR-V, and MLIR</title>
      <link>https://www.lei.chat/posts/compilers-and-irs-llvm-ir-spirv-and-mlir/</link>
      <pubDate>Sat, 08 Jan 2022 13:58:34 -0500</pubDate>
      
      <guid>https://www.lei.chat/posts/compilers-and-irs-llvm-ir-spirv-and-mlir/</guid>
      <description>&lt;p&gt;Compilers are often critical components in various development toolchains that
boosts developer productivity.
A compiler is normally used as a monolithic black box that consumes a high-level
source program and produces a semantically-equivalent low-level one.
It is still structured inside though; what flows between internal layers
are called intermediate representations (IRs).&lt;/p&gt;
&lt;p&gt;IRs are critical to compilers. Like there are many compilers, there are also
many IRs in use.
I&amp;rsquo;m fortunate to have direct experience with three major schools of IRs or
infrastructures thus far&amp;mdash;LLVM IR, SPIR-V, MLIR, particularly extensively for
the last two, where I both joined development in an early stage.
So I&amp;rsquo;d like to write a series of blog posts to log down my understanding of
compilers and IRs. Hopefully it could be beneficial to others.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
