<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vulkan-compute on Lei.Chat()</title>
    <link>https://www.lei.chat/categories/vulkan-compute/</link>
    <description>Recent content in vulkan-compute on Lei.Chat()</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2018 - 2022 &lt;a href=&#34;https://www.lei.chat/&#34;&gt;Lei Zhang&lt;/a&gt;
</copyright>
    <lastBuildDate>Sun, 25 Jul 2021 11:25:26 -0400</lastBuildDate><atom:link href="https://www.lei.chat/categories/vulkan-compute/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GPGPU, ML Inference, and Vulkan Compute</title>
      <link>https://www.lei.chat/posts/gpgpu-ml-inference-and-vulkan-compute/</link>
      <pubDate>Sun, 25 Jul 2021 11:25:26 -0400</pubDate>
      
      <guid>https://www.lei.chat/posts/gpgpu-ml-inference-and-vulkan-compute/</guid>
      <description>&lt;p&gt;Nowadays GPUs are utilized for both graphics rendering and general-purpose
compute (GPGPU). For the latter, CUDA is the indisputable leading solution.
Though, with so many other GPU vendors, the quest for a GPGPU standard never
stops. OpenCL was a great attempt and is used widely; but still it falls
short on many aspects.
Given the success of Vulkan in graphics and it being both a graphics and
compute API, one would wonder whether it can actually be the next-generation
GPGPU standard. I certainly believe so; but the road is not full of roses.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is Vulkan Compute?</title>
      <link>https://www.lei.chat/posts/what-is-vulkan-compute/</link>
      <pubDate>Fri, 25 Jun 2021 10:15:58 -0400</pubDate>
      
      <guid>https://www.lei.chat/posts/what-is-vulkan-compute/</guid>
      <description>&lt;p&gt;Vulkan is designed to be both a graphics and compute API. However, there is no
formal definition of the compute subset from the Khronos group, the industry
consortium behind Vulkan. The unified specification of Vulkan does not help here
either as it contains everything, both graphics and compute. Unlike the
complicated graphics subset, the compute subset is actually quite
straightforward and clean. So in this blog post I try to explain what Vulkan
compute is, from my point of view.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
