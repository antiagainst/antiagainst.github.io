<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lei Zhang (antiagainst)&#39;s Blog</title>
    <link>https://antiagainst.github.io/</link>
    <description>Recent content on Lei Zhang (antiagainst)&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 12 May 2018 17:44:14 -0400</lastBuildDate>
    
	<atom:link href="https://antiagainst.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shader Toolchain: HLSL in Vulkan</title>
      <link>https://antiagainst.github.io/post/shader-toolchain-hlsl-in-vulkan/</link>
      <pubDate>Sat, 12 May 2018 17:44:14 -0400</pubDate>
      
      <guid>https://antiagainst.github.io/post/shader-toolchain-hlsl-in-vulkan/</guid>
      <description>&lt;p&gt;On &lt;a href=&#34;https://www.khronos.org/events/2018-vulkan-developer-day-in-montreal&#34;&gt;2018 Vulkan Developer Day in Montr√©al&lt;/a&gt;, I gave a talk
regarding &amp;ldquo;Shader Toolchain: HLSL in Vulkan&amp;rdquo;. Here are the links to the
video recording, slides, and documentation/downloads for DirectX Shader
Compiler (DXC)&amp;rsquo;s SPIR-V CodeGen.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HLSL for Vulkan: Semantic Strings and Location Numbers</title>
      <link>https://antiagainst.github.io/post/hlsl-for-vulkan-semantic-strings-and-location-numbers/</link>
      <pubDate>Fri, 11 May 2018 13:15:45 -0400</pubDate>
      
      <guid>https://antiagainst.github.io/post/hlsl-for-vulkan-semantic-strings-and-location-numbers/</guid>
      <description>&lt;p&gt;This blog post discusses how HLSL semantic strings are translated into
SPIR-V location numbers for Vulkan shader inter-stage interface matching
in the &lt;a href=&#34;https://github.com/Microsoft/DirectXShaderCompiler/blob/master/docs/SPIR-V.rst&#34;&gt;SPIR-V CodeGen&lt;/a&gt; of &lt;a href=&#34;https://github.com/Microsoft/DirectXShaderCompiler&#34;&gt;DirectXShaderCompiler&lt;/a&gt; (DXC).
It is one of the &amp;ldquo;HLSL for Vulkan&amp;rdquo; series.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HLSL for Vulkan: Resources</title>
      <link>https://antiagainst.github.io/post/hlsl-for-vulkan-resources/</link>
      <pubDate>Tue, 24 Apr 2018 16:39:21 -0400</pubDate>
      
      <guid>https://antiagainst.github.io/post/hlsl-for-vulkan-resources/</guid>
      <description>&lt;p&gt;This blog post discusses how to manage resources in HLSL for Vulkan, using the
&lt;a href=&#34;https://github.com/Microsoft/DirectXShaderCompiler/blob/master/docs/SPIR-V.rst&#34;&gt;SPIR-V CodeGen&lt;/a&gt; of &lt;a href=&#34;https://github.com/Microsoft/DirectXShaderCompiler&#34;&gt;DirectXShaderCompiler&lt;/a&gt; (DXC).
It is one of the &amp;ldquo;HLSL for Vulkan&amp;rdquo; series.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HLSL for Vulkan: Matrices</title>
      <link>https://antiagainst.github.io/post/hlsl-for-vulkan-matrices/</link>
      <pubDate>Wed, 18 Apr 2018 20:13:20 -0400</pubDate>
      
      <guid>https://antiagainst.github.io/post/hlsl-for-vulkan-matrices/</guid>
      <description>&lt;p&gt;This blog post discusses how HLSL matrices are translated into SPIR-V for Vulkan
consumption in the &lt;a href=&#34;https://github.com/Microsoft/DirectXShaderCompiler/blob/master/docs/SPIR-V.rst&#34;&gt;SPIR-V CodeGen&lt;/a&gt; of &lt;a href=&#34;https://github.com/Microsoft/DirectXShaderCompiler&#34;&gt;DirectXShaderCompiler&lt;/a&gt;.
It is one of the &amp;ldquo;HLSL for Vulkan&amp;rdquo; series.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://antiagainst.github.io/about/</link>
      <pubDate>Tue, 14 Nov 2017 09:45:50 -0500</pubDate>
      
      <guid>https://antiagainst.github.io/about/</guid>
      <description> About Me I&amp;rsquo;m Lei Zhang. I work on Vulkan and SPIR-V tooling within Google. They are all open source projects hosted on GitHub:
 SPIRV-Headers: https://github.com/KhronosGroup/SPIRV-Headers SPIRV-Tools: https://github.com/KhronosGroup/SPIRV-Tools Shaderc: https://github.com/google/shaderc Glslang: https://github.com/KhronosGroup/glslang VK-GL-CTS: https://github.com/KhronosGroup/VK-GL-CTS rspirv: https://github.com/google/rspirv shaderc-rs: https://github.com/google/shaderc-rs  Currently I&amp;rsquo;m leading the effort of contributing SPIR-V CodeGen into DirectX Shader Compiler:
 https://github.com/Microsoft/DirectXShaderCompiler https://khr.io/hlsl2spirv  </description>
    </item>
    
  </channel>
</rss>